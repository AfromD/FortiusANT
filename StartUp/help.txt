usage: FortiusAntCommand.py [-h] [-a] [-A] [-d DEBUG] [-g] [-G MODIFYGRADE]
                            [-H HRM] [-m] [-M] [-n] [-p FACTOR] [-P] [-r] [-s]
                            [-t TACXTYPE] [-u] [-x]

Program to broadcast data from USB Tacx Fortius trainer, and to receive
resistance data for the trainer

optional arguments:
  -h, --help            show this help message and exit
  -a, --autostart       Automatically start
  -A, --PedalStrokeAnalysis
                        Pedal Stroke Analysis
  -d DEBUG, --debug DEBUG
                        Show debugging data
  -g, --gui             Run with graphical user interface
  -G MODIFYGRADE, --ModifyGrade MODIFYGRADE
                        Modify GradeMode: offset/factor
  -H HRM, --hrm HRM     Pair this Heart Rate Monitor (0: any, -1: none)
  -m, --manual          Run manual power (ignore target from ANT+ Dongle)
  -M, --manualGrade     Run manual grade (ignore target from ANT+ Dongle)
  -n, --calibrate       Do not calibrate before start
  -p FACTOR, --factor FACTOR
                        Adjust target Power by multiplying by this factor for
                        static calibration
  -P, --PowerMode       Power mode has preference over Resistance mode (for 30
                        seconds)
  -r, --Resistance      Target Resistance = Target Power (to create power
                        curve)
  -s, --simulate        Simulated trainer to test ANT+ connectivity
  -t TACXTYPE, --TacxType TACXTYPE
                        Specify Tacx Type; e.g. i-Vortex, default=autodetect
  -u, --uphill          Uphill only; negative grade is ignored
  -x, --exportTCX       Export TCX file
